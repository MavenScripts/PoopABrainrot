-- Load Ash-Libs
local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/BloodLetters/Ash-Libs/refs/heads/main/source.lua"))()

-- Create main window
GUI:CreateMain({
    Name = "Poop a Brainrot",
    title = "Poop a Brainrot GUI",
    ToggleUI = "K",
    WindowIcon = "home",
    Theme = {
        Background = Color3.fromRGB(25, 25, 35),
        Secondary = Color3.fromRGB(35, 35, 45),
        Accent = Color3.fromRGB(138, 43, 226),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(180, 180, 180),
        Border = Color3.fromRGB(50, 50, 60),
        NavBackground = Color3.fromRGB(20, 20, 30)
    },
    Blur = { Enable = false, value = 0.2 },
    Config = { SettingsButton = false } -- remove default settings
})

-- Services
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local loopConnection = nil

--[[ 
ðŸ“Œ Webhook system
No webhook hardcoded here. 
If you want to send injection logs to Discord, set it in your executor before running:
    getgenv().WEBHOOK = "https://discord.com/api/webhooks/XXXX/XXXX"
]]
local webhook_url = getgenv().WEBHOOK

local function sendWebhook(msg)
    if not webhook_url then return end
    local data = {
        ["username"] = "Poop Script Logger",
        ["embeds"] = {{
            ["title"] = "Script Injected",
            ["description"] = msg or (LocalPlayer.Name .. " injected Poop a Brainrot script!"),
            ["color"] = 5814783
        }}
    }
    local headers = { ["Content-Type"] = "application/json" }
    local body = game:GetService("HttpService"):JSONEncode(data)

    local ok, err = pcall(function()
        if syn and syn.request then
            syn.request({Url = webhook_url, Method = "POST", Headers = headers, Body = body})
        elseif http_request then
            http_request({Url = webhook_url, Method = "POST", Headers = headers, Body = body})
        elseif request then
            request({Url = webhook_url, Method = "POST", Headers = headers, Body = body})
        end
    end)
    if not ok then
        warn("Webhook failed: " .. tostring(err))
    end
end

-- AutoPoop functions
local function startAutoPoop()
    if loopConnection then return end
    loopConnection = RunService.RenderStepped:Connect(function()
        local startEvent = ReplicatedStorage:WaitForChild("StartPoopMinigameServer")
        local brainEvent = ReplicatedStorage:WaitForChild("PoopBrainrotEvent")
        local successEvent = ReplicatedStorage:WaitForChild("PoopSuccessEvent")
        startEvent:FireServer()
        for i = 1, 15 do
            brainEvent:FireServer(2, 6)
        end
        successEvent:FireServer()
    end)
end

local function stopAutoPoop()
    if loopConnection then
        loopConnection:Disconnect()
        loopConnection = nil
        -- Reset character when stopped
        if LocalPlayer.Character then
            LocalPlayer.Character:BreakJoints()
        end
    end
end

-- Main Tab
local mainTab = GUI:CreateTab("Main", "home")
GUI:CreateSection({ parent = mainTab, text = "AutoPoop Section" })

local autoPoopEnabled = false
GUI:CreateToggle({
    parent = mainTab,
    text = "Start / Stop AutoPoop",
    default = false,
    callback = function(state)
        if state and not autoPoopEnabled then
            startAutoPoop()
            autoPoopEnabled = true
            GUI:CreateNotify({ title = "AutoPoop", description = "AutoPoop enabled!" })
            sendWebhook(LocalPlayer.Name .. " enabled AutoPoop.")
        elseif not state and autoPoopEnabled then
            stopAutoPoop()
            autoPoopEnabled = false
            GUI:CreateNotify({ title = "AutoPoop", description = "AutoPoop disabled!" })
            sendWebhook(LocalPlayer.Name .. " disabled AutoPoop.")
        end
    end
})

-- Teleports Tab
local teleportsTab = GUI:CreateTab("Teleports", "map")
GUI:CreateSection({ parent = teleportsTab, text = "Teleport Locations" })

local function teleportTo(x, y, z)
    LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(x, y, z))
end

local teleportLocations = {
    {Name = "Sell", Pos = Vector3.new(-70, 5, -1)},
    {Name = "Shop", Pos = Vector3.new(-68, 5, -14)},
    {Name = "Potions Store", Pos = Vector3.new(-67, 5, 25)},
    {Name = "Food Store", Pos = Vector3.new(-68, 5, 10)},
    {Name = "Luck Machine", Pos = Vector3.new(-64, 4, -40)},
    {Name = "2x Size Zone", Pos = Vector3.new(2, 3, -32)},
    {Name = "Food Conveyor", Pos = Vector3.new(2, 4, 52)},
    {Name = "Poop Area", Pos = Vector3.new(43, 4, 50)},
    {Name = "Leaderboards", Pos = Vector3.new(61, 4, -1)},
    {Name = "Construction Site (Coming Soon)", Pos = Vector3.new(43, 3, -38)}
}

for _, tp in pairs(teleportLocations) do
    GUI:CreateButton({
        parent = teleportsTab,
        text = tp.Name,
        callback = function()
            teleportTo(tp.Pos.X, tp.Pos.Y, tp.Pos.Z)
            GUI:CreateNotify({ title = "Teleport", description = "Teleported to "..tp.Name })
        end
    })
end

-- Credits Tab
local creditsTab = GUI:CreateTab("Credits", "star")
GUI:CreateSection({ parent = creditsTab, text = "Author" })
GUI:CreateParagraph({ parent = creditsTab, text = "rrsmirnoff" })
GUI:CreateSection({ parent = creditsTab, text = "Links" })

GUI:CreateButton({
    parent = creditsTab,
    text = "Discord",
    callback = function()
        setclipboard("https://discord.gg/mgeXc8xZGw")
        GUI:CreateNotify({ title = "Link Copied", description = "Discord invite copied to clipboard!" })
    end
})

GUI:CreateButton({
    parent = creditsTab,
    text = "YouTube",
    callback = function()
        setclipboard("https://www.youtube.com/channel/UCrdD-Zsn7bP3kkCH91J_wAQ")
        GUI:CreateNotify({ title = "Link Copied", description = "YouTube channel link copied to clipboard!" })
    end
})

GUI:CreateButton({
    parent = creditsTab,
    text = "Roblox Group",
    callback = function()
        setclipboard("https://www.roblox.com/communities/34896499/puchu#!/about")
        GUI:CreateNotify({ title = "Link Copied", description = "Roblox group link copied to clipboard!" })
    end
})
